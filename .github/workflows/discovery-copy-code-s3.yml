---
name: Copy Discovery Code S3

on:
  workflow_call:
    inputs:
      target-env:
        type: string
        required: true
      source-env:
        type: string
        required: true
      code-package:
        type: string
        required: true
    secrets:
      AWS_ROLE_ARN:
        required: true
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true

permissions:
  id-token: write
  contents: write

jobs:
  copy:
    runs-on: "ubuntu-latest"
    env:
      region: "eu-west-2"
      source_env: "${{ inputs.source-env }}"
      target_env: "${{ inputs.target-env }}"
      code_package: "${{ inputs.code-package }}"

    steps:
      - name: Checkout ds-github-actions
        uses: actions/checkout@v3
        with:
          repository: nationalarchives/ds-github-actions

      - name: Install AWS CLI
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          cache: 'pip'
          cache-dependency-path: '**/requirements-aws-cli.txt'

      - name: Install python dependencies
        run: |
          pip install -r scripts/requirements-aws-cli.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: "${{ env.region }}"

      - name: copy web from env.source_env to env.target_env
        if: inputs.code-package == 'web' || inputs.code-package == 'web_&_api'
        env:
          SOURCE_ENV: "${{ env.source_env }}"
          TARGET_ENV: "${{ env.target_env }}"
        run: |
          aws s3 ls s3://ds-$SOURCE_ENV-deployment-source/discovery/builds/TNA.Discovery.web.zip
          aws s3 ls s3://ds-$TARGET_ENV-deployment-source/discovery/builds/TNA.Discovery.web.zip
          aws s3 cp s3://ds-$SOURCE_ENV-deployment-source/discovery/builds/TNA.Discovery.web.zip s3://ds-$TARGET_ENV-deployment-source/discovery/builds/TNA.Discovery.web.zip

      - name: copy api from env.source_env to env.target_env
        if: inputs.code-package == 'api' || inputs.code-package == 'web_&_api'
        env:
          SOURCE_ENV: "${{ env.source_env }}"
          TARGET_ENV: "${{ env.target_env }}"
        run: |
          aws s3 cp s3://ds-$SOURCE_ENV-deployment-source/discovery/builds/TNA.Discovery.api.zip s3://ds-$TARGET_ENV-deployment-source/discovery/builds/TNA.Discovery.api.zip
...
