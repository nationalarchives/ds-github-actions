#!/bin/bash

# Update yum
sudo yum -y update

sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo chmod 0600 /var/swap.1
sudo /sbin/mkswap /var/swap.1
sudo /sbin/swapon /var/swap.1

sudo yum -y groupinstall "Development Tools"
sudo yum -y erase openssl-devel
sudo yum -y install openssl11 openssl11-devel  libffi-devel bzip2-devel wget

# update python
sudo wget https://www.python.org/ftp/python/3.13.7/Python-3.13.7.tgz
sudo tar -xf Python-3.13.7.tgz
cd Python-3.13.7/
sudo ./configure --enable-optimizations --prefix=/usr/local --enable-shared LDFLAGS="-Wl,-rpath /usr/local/lib"
sudo make -j $(nproc)
sudo make altinstall
alias python3=Python-3.13.7/python
alias pip3=pip3.13
echo "alias python3=Python-3.13.7/python" | sudo tee -a /home/ec2-user/.bashrc
echo "alias pip3=pip3.13" | sudo tee -a /home/ec2-user/.bashrc

# Install apache
sudo yum -y install httpd httpd-tools mod_ssl
sudo systemctl enable httpd
sudo systemctl start httpd

# Remove old php version
sudo yum -y remove php*

# Install php 7.4
sudo amazon-linux-extras enable php7.4
sudo yum clean metadata
sudo yum -y install php php-common php-pear
sudo yum -y install php-{cli,cgi,curl,mbstring,gd,mysqlnd,gettext,json,xml,fpm,intl,zip,simplexml,gd}

# Install ImageMagick
sudo yum -y install php-devel gcc ImageMagick ImageMagick-devel
sudo bash -c "yes '' | sudo pecl install -f imagick"
sudo bash -c "echo 'extension=imagick.so' > /etc/php.d/imagick.ini"

sudo systemctl restart php-fpm.service
sudo systemctl restart httpd.service

# Install NFS packages
sudo yum -y install amazon-efs-utils
sudo yum -y install nfs-utils
sudo service nfs start
sudo service nfs status

# Install Cloudwatch agent
sudo yum -y install amazon-cloudwatch-agent
sudo amazon-linux-extras -y install collectd
sudo aws s3 cp s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/cloudwatch/cloudwatch-agent-config.json /opt/aws/amazon-cloudwatch-agent/bin/config.json
sudo /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:/opt/aws/amazon-cloudwatch-agent/bin/config.json

# Install WP CLI
mkdir /build
cd /build
sudo curl -O https://raw.githubusercontent.com/wp-cli/builds/gh-pages/phar/wp-cli.phar
sudo chmod +x wp-cli.phar
sudo mv wp-cli.phar /usr/local/bin/wp
wp cli info
cd /

# client required by wp config command
sudo yum -y install mysql

# Change Apache base config file to point to different root
# /etc/httpd/conf/httpd.conf
sudo sed -i 's/DocumentRoot "\/var\/www\/html"/DocumentRoot "\/var\/www"/g' /etc/httpd/conf/httpd.conf
sudo sed -i 's/Directory "\/var\/www\/html"/Directory "\/var\/www"/g' /etc/httpd/conf/httpd.conf

sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/logfile_archive.sh \
  /usr/local/sbin/logfile_archive.sh
sudo chmod +x /usr/local/sbin/logfile_archive.sh

sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/httpd \
  /etc/logrotate.d/httpd

sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/wordpress.conf \
  /etc/httpd/conf.d/wordpress.conf
sudo chown apache:apache /etc/httpd/conf.d/wordpress.conf
sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/wp-cli.yml \
  /var/www/html/wp-cli.yml
sudo chown apache:apache /var/www/html/wp-cli.yml
sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/robots.txt \
  /var/www/html/robots.txt
sudo chown apache:apache /var/www/html/robots.txt
sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/healthcheck.html \
  /var/www/html/healthcheck.html
sudo chown apache:apache /var/www/html/healthcheck.html
sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/.htaccess \
  /var/www/html/.htaccess
sudo chown apache:apache /var/www/html/.htaccess

# copy & call wordpress setup script
sudo aws s3 cp \
  s3://{{ s3_deployment_bucket }}/{{ s3_deployment_root }}/wordpress/wordpress-setup.sh \
  ./wordpress-setup.sh
sudo chmod +x ./wordpress-setup.sh
./wordpress-setup.sh

# remove PHP version exposure
sudo sed -i 's/expose_php = On/expose_php = Off/' /etc/php.ini
sudo systemctl restart php-fpm

# Set file permissions for apache
sudo usermod -a -G apache ec2-user
sudo usermod -a -G apache ssm-user
sudo chown apache:apache /var/www -R
sudo find /var/www -type d -exec chmod 775 {} \;
sudo find /var/www -type f -exec chmod 664 {} \;
sudo systemctl restart httpd

cat << EOF > /var/finish-init.txt
[status]
finished = true
EOF
