#!/bin/bash

sudo dnf update -y

# create swap file
sudo /bin/dd if=/dev/zero of=/var/swap.1 bs=1M count=1024
sudo chmod 0600 /var/swap.1
sudo /sbin/mkswap /var/swap.1
sudo /sbin/swapon /var/swap.1

# attach the volume to instance
touch /var/source-attach.log
region="{{region}}"
volumeName="{{volume_name}}"
TOKEN=$(curl -X PUT "http://169.254.169.254/latest/api/token" -H "X-aws-ec2-metadata-token-ttl-seconds: 21600")
instanceid=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/instance-id)
attachedVolume=$(aws ec2 describe-volumes --region $region --filters Name=tag:Name,Values=$volumeName Name=attachment.instance-id,Values=$instanceid --query "Volumes[*].VolumeId" --output text)
if [[ -z "$attachedVolume" ]]; then
  echo "try to mount EBS  $volumeName" >> /var/source-attach.log
  avzone=$(curl -H "X-aws-ec2-metadata-token: $TOKEN" -v http://169.254.169.254/latest/meta-data/placement/availability-zone)
  ebsvolume=$(aws ec2 describe-volumes --region $region --filters Name=tag:Name,Values=$volumeName Name=availability-zone,Values=$avzone --query "Volumes[*].[VolumeId, State=='available']" --output text  | grep True | awk '{print $1}' | head -n 1)
  if [[ -z "$ebsvolume" ]]; then
    echo "error: no volume with name $volumeName found" >> /var/source-attach.log
    exit 1
  else
    if [ ! -d "/data" ]; then
      echo "create data mount directory" >> /var/source-attach.log
      sudo mkdir /data
    fi
    aws ec2 attach-volume --region $region --volume-id $ebsvolume --instance-id $instanceid --device /dev/xvdf
    echo "attach volume $ebsvolume" >> /var/source-attach.log
    sleep 10
    volumeFormatted=$(sudo file -s /dev/nvme1n1 | grep "filesystem data")
    echo "check drive" >> /var/source-attach.log
    if [[ -z "$volumeFormatted" ]]; then
      echo "format volume $attachedVolume" >> /var/source-attach.log
      sudo mkfs -t xfs /dev/nvme1n1
    fi
  fi

  aws ec2 detach-volume --region $region --volume-id $ebsvolume
  echo "Volume $ebsvolume detached" >> /var/source-attach.log

else
  echo "Volume $attachedVolume already attached" >> /var/source-attach.log
fi

cat << EOF > /var/finidh-source.txt
[status]
finished = true
EOF
